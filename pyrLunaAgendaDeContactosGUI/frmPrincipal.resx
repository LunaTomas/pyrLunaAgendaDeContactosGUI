<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABPaXcAMEBITUNadsQSIUbEDRg3xA0YN8QOGTjEDxk2xBAZNsQPGTXEDxk0xg8X
        MsoNFzDNDBcwzQ4aM8oNGjTGDBk0xAsYM8QJFzPECRg1xAgaNsQIGjfECSFEwQUSKlU10P8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAERRVgAwODsjfpOgxElwmv8QNm7/F0eE/x1Tkf8iVpP/KF2Z/yle
        mf8nW5f/KF6W/ypgl/8qYJj/KmGY/yhdlP8oXZX/KFuT/yZTi/8nU4z/JVGM/xtDff8TM2//Bx5P2QIO
        IjcEHEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIKenwBHVVE1d6Cw0zNhlf8YUpf/KXbA/zJ9
        wv8/i83/Q4/P/0CQ0f9Dk9P/Q5XT/0SY1v9BlNT/P5HS/0CV1f9El9T/SJPR/0iMzv9AiM3/NH3F/yVh
        rP8PO33/Bi5ewwMNGSIFFSkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1Rkd3ZYae/SBe
        nP80ic//PJDQ/0aZ1P9Sotn/WKfa/1yp3P9frd7/YbLh/2Kv4f9iruD/ZLDh/2ez4v9stOP/arPj/2Sz
        4/9Xq97/SpzV/ziDvv8UU5D/C0BnqQUKDRMHFyMAAAAAAAAAAAAAAAAAAAAAAAAAAAAqY78ABxMmQxAc
        NNhYepL/KHa4/zaT1f9Endj/S6bd/16v3/9dmcH/TXCO/1N0jf9Rc4r/UnGH/1Ryhf9Xcof/VG+F/1Vz
        hv9XdYn/V3aK/1V4jf9SdYr/R3CL/CBGbfUTSWzzECY0eQAAAAEBAQAAAAAAAAAAAAAAAAAACRguAAQM
        FzMWNVzWHDdj/1R+mf8vjMv/O6Le/0yt4v9QruP/WKfY/zxvmf8SDxL/HxkE/x8bA/8eGgL/HRsC/x8b
        A/8bGgL/FRYC/xERA/8QDgT/DRch/xMrVP8QID3wBgcQcgcLFEEHDhYuAAAAAgAAAAAAAAAAAAAAAAII
        EQAAAAATEStNtSRWjf8dOFH/Sn+T/zWZ1f87pOP/TK7l/1a05v9crNz/OG2c/xwYD/87NQH/OjcA/zs8
        Af8+QgL/QEMD/0FHA/88QgH/LTEB/yQmAP8eJAr/GDpW/x5Lhv8SJkexAQAAEQUHDgAAAAAAAAAAAAAA
        AAAAAQEASMz/AAshOXAfUIX7J1V3/xYeFf9He4//NpTS/zue3/9Gq+P/VLHm/2Cy4f81bJz/GBMQ/0E1
        A/9TTgj/QkQD/zAyA/8pLAP/MTUE/0FIBf9JUgX/Nz8B/yksAP8bIg7/GDxh/xo9avsNGS1tN27AAAEB
        AgAAAAAAAAAAAAUSIgABCRQeGkZx0yplmv8jOTD/JSQC/0h5jP80j8v/P6Df/0as5f9Vt+r/Yrfl/zNp
        mf8YERD/LyIA/zgwA/8uKgH/IiEB/x4eAf8bGwH/GhkB/y0yA/9hcAX/R1AA/ykuAP8XJyL/H06F/xc1
        XdAAAgYcBAsVAAAAAAAAAAAAJVOAABQtRWQoY5n8JlRt/y44Bv85OwP/RneM/zqS0P9Irej/Tbbr/1vA
        8f9nv+r/MWSR/xoSD/8zIwD/MCYA/ysmAP8nIwH/JB8B/yAcAf8cGgH/GhwB/2VvCP+Djw3/TFUF/x4j
        Bf8ZPF3/IlKH/AsfOGMUOGMAAQAAAAEFBwAAAAAGJEtorDF1qf8jOjL/QUsA/0JFBP9DdYv/Q5jS/1W7
        8f9axff/aM36/3HJ8f8zYY3/HRMO/zcmAP8zKAH/LygB/y4mAP8tIQH/JxsB/x8ZAP8ZGAD/Gx0B/yUp
        BP8dIAP/DQ4A/w8iMP8nYZr/EzZdqwAAAAYAAgkACxojAAgQFh4uaI3aL2+X/yMtD/9OWgD/SEoE/0V5
        jv9SrOL/YsX4/2bK/P9x0v3/dMrx/zRgjf8iGRD/RTkB/zowAf8yKQH/MygA/zckAP8xHgD/KRoB/yIY
        Af8bFgD/FhMA/xQQAP8OCwD/CRAT/yZdk/8bSXzZAAEOHQMLGwAYNkkAFC4+OjyFq/EpX3f/ISUC/0RM
        Af81OAT/QXeP/1my5v9uzfv/c8/9/3fW/v991fb/OWaU/x8WEf9FOAD/T0cC/0lDA/89NgL/OCkA/zYg
        AP8yGwH/LBoA/yQXAP8dFAD/GRAA/xIMAP8ICQb/Hk58/x9WkvAEFzE5BRw5ACNMZwAbOk9PSJi8+iVR
        Y/8QEAD/HR8A/xYXA/8+dJD/YLfq/3rU/v981f7/fdv+/4/j/P9Cbpr/HxYR/0EzAP9IPAD/VEoC/2Vi
        Bf9oZQX/XVID/0c5Av8zJwL/JRwB/x0WAf8ZEgH/FA4B/wkIAv8fTXT/K3Kw+QonR04NMlsAJEtvABk0
        TlpIlcH9JEtc/w4MAP8dHQD/GBcD/z50kf9qvev/h9r//4LY/f+G3f3/oOz+/0l0nP8qIBL/UEIB/1A+
        AP9VPAD/WkAA/2ZQAf91YgL/d2YE/2tbBf9VSwX/RT0G/z83BP8zLwL/GxsB/yhWbf85h7b9Dy5KWRVA
        aAAfPmMAFy5KU0SOw/sjTWT/Dw0A/x4cAP8aFwP/PXWQ/3DA6/+P3v//g9f9/4zf/f+n8f7/TXmf/yMc
        E/9mWAv/YFID/15BAP9lOwD/ZjoA/2g6AP9sOwD/az8A/2FAAf9aPwH/U0AA/0E2AP8lIQH/NmZx/0yX
        tPsVL0VSHD5bABQqSAAQITtAP4S/9CdafP8NDgD/HBwA/xgXA/87dJH/b8Hp/4zc/P+B0vj/kd/7/7L0
        /v9PeJ7/GhQR/0A4Av9kXgb/ZlQB/29DAP9zPAD/czgA/3M3Af9wOAD/ajkA/2U6AP9dOwD/RTIA/yUg
        BP8+coD/UJGn8xIiMj8VKTwADBcrAAYMHiU6d6ziM3Of/wsQCP8YGgD/FRcD/zdxj/9uwOb/kuH6/4nb
        +v+j6/3/yPr//1Z5m/8bFhD/NjEA/0RBA/9qZQT/dE8A/35AAP95OgD/dzkA/3U4AP9xOQD/azkA/2E4
        Af9ELQD/ICAP/0ODmv9GepHhCAkUJA4UHwADBxAAAAAACzFhjbpBicP/EB8i/yEmAP8jJQX/OHKQ/3fH
        5v+h7P7/nOz9/7X1/v/V/P//WnmY/xsWD/84LgD/OC0A/1ZOBf94XQL/g0sA/4VCAP+APgH/ezwB/3c6
        AP9xOgD/XzYB/zokAP8dKyz/Qoqy/zJWbrkAAAALBQYMAAEAAQBqyf8AIkBleEOJzf8gR1r/NT4A/z5C
        Bf8+d5D/fs3o/5Pg+/+c7P3/u/j//9r8//9beJb/HBUP/z8rAP9CKgD/RTQC/3RlBP+HVwH/j00A/4pG
        AP+GRAH/gUIA/3Y+AP9WMAD/KxoB/yVPZv9AhK3/HzFEd1qWyQAAAAEABwAAABUmQQAQGzItPXSx4zd2
        q/8gMBT/Ky0C/0B3kf98zOr/luX+/57s/v+r8/7/yPn+/1h3lv8cFA//RCkA/00qAP9EKQH/XFMG/3RZ
        A/+UXwH/llMA/49KAP+IRwD/dTwA/0omAP8fHx3/NHmj/zRjguIQDxctFRkkAAAAAAAAAAAAAwYMAAAA
        AAMvU36NS5XT/yhWZv8ZGwT/QHWR/2295/+F2/3/juD+/5fp/v+28///VXiY/yAXEf9GLAD/WjAA/0cm
        AP9YTgj/WkUG/2FEA/9/UgP/jlAB/4xJAf9uNgD/OR4G/x03Xf8tXpn/Hi5AjAAAAAIDAgMAAAAAAAAA
        AAAAAAAAIDVOABckOCREe6vRSJbI/xMqNv8/cY7/ZLLj/3bR/f930f7/fNn+/6Tt//9QeZr/MSMS/0ct
        AP9bLwH/RiMA/2ZXB/+nlQ//clUH/0ssBP9LKgL/Wi0C/0ciAv8jMED/JVKU/yE0W9AMCAokEBAYAAAA
        AAAAAAAAAAAAAAAAAAABAQIAfcj/ACxDXVFFg7XrKFOB/z1uk/9Yp97/aMj8/2rL/v9q0P7/h+D+/0Vy
        mP8lGw//MR8A/0EgAP9OIgD/fmUI/8uzCv/CnQP/n3EE/2AxAv8qEAL/GiY5/yxhnf8oSHXrFRcjUTtO
        eQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICg4AAAAAAytIY2gqQmfvPXGZ/1ir4/9oyf7/Zsr+/2TM
        /v9sy/z/N2GQ/x8WDv8lGQD/NRoA/04jAP+bgxH/ya8O/6h1AP+ASQD/TSgJ/yUvRf8pWJj/K01+7x0i
        MWkAAAADBgMDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDhMAExQVBBQWI2o/dJz0XLHo/2jH
        /f9gw/z/XsP8/2W++f80Von/GxQN/x0UAP8nEwD/MhQA/1IzB/9tTgr/Uy8H/zIqKv8oR3L/L16h/ypG
        d+UZHjBjAAAABAcDBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHDhUABw0SIESB
        qtxftOn/ZsL5/1y8+P9Zt/b/Yrb1/zNRhP8RDxL/ERAK/xQODP8VERP/FRck/xYnQ/8lR3f/NGSm/zVd
        m/oqPmS9FRcnQAAAAAIEAQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcP
        FQAIEBQeQICq2lqq4v9htvP/V7fy/1e08v9irOz/MEx+/x8nSv8yW47/MmGX/zFgnP81Zaf/NV+i/zNV
        kfQtQ3LEHic/Zw0ICBQmICgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHTU5ABsvMTBBhKvkUKLZ/1uw7P9Tte//VbPv/1yf4P8tRHf+HydL3DZfl9U2YZnWMlSJyi9G
        c68oNVeBHSA2RQoGDRIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABknJQAJDAQRWYiPpVekz/9Eltb/RZna/0Kd4P9End//SIzR/yc8c/oTFChbBQsWFQkO
        GhkGBQoRAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAOGBoAAAAAB2mHhYWQ0t/7YLfq/0eO0v9Ficz/On7I/zt+yP9Bdr7/KkB3+RcZ
        Mk4gJUcAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABclKAAQHR8mbIeJv4OutdZmmavUVoOf1E52ldREaY3URWmM1EVl
        iNQ4UWzNGSEwPCEsPwABAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8AAAH/AAAA/4AAAH/AAAA/gAAAHwAAAB4AAAB+AAAAfAAAADwAAAA4AA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAcAAAAPAAAADwAAAA+AAAAfwAAAP8AAAD/gA
        AB/8AAA//AAA//wAA//4AB//8AH///AB//8=
</value>
  </data>
</root>